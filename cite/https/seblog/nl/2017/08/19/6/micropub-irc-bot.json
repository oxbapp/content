{
  "type": [
    "h-cite"
  ],
  "properties": {
    "url": [
      "https://seblog.nl/2017/08/19/6/micropub-irc-bot"
    ],
    "name": [
      "Adding Micropub to your IRC bot"
    ],
    "published": [
      "2017-08-19T16:17:16Z"
    ],
    "content": [
      "In last weeks IndieWeb newsletter I read a blogpost by Sven about having notifications for webmentions and such via IRC. He described more or less the setup I have too: using Aaron’s TikTokBot framework, running on the same machine as a private IRC server for it and your IRC bouncer. In my case, the machine is a Raspberry Pi in my living room, but Sven’s guide describes more or less what I did too, so please check that out.\nI divided my webmention notifications into webmentions and silomentions (that’s backfeed from services like Bridgy and OwnYourSwarm) and I also get notifications for logins and Micropub requests, so I can keep track of what’s happening on my blog. But that’s just expanding the notifications. I added some other functionality I wanted to talk about.\nHey bot, please like this post\nThe one thing that made me post on my site the most, was adding Micropub support. There are various Micropub clients out there that you can use to just write a blogpost, to post a like, to import checkins from Swarm or what have you. But since it’s so simple (once you know how), I also made a lot of Micropub clients out of Workflow, Paw or, in this case, my IRC bot called Bop.\nI can now say like https://example.com/a-post in the same channel my notifications come in, and Bop will post a like-post on my site. My site will then post the webmention and if the other site accepts it, it will be shown as a like under the post, just like that.\n\nPlease refer to Sven’s blogpost to learn how to set the bot up. I also assume you already have a site that supports Micropub. I will go into obtaining an access token a bit, but that might be a tricky part and depends on how your Micropub endpoint works.\nGetting your bot hooked\nSven mentions the file ‘hooks.yml’, which contains hooks: [] for him. The hooks-file defines the things the bot will respond to, and since Sven only want to receive notifications, not talk to his bot, he does not need hooks. But we do. Replace the contents of the hooks file with the following:\nhooks:\n- match: \"^(like|bookmark|rsvp|yes|no|maybe|interested) (https?\\\\:\\\\/\\\\/[a-zA-Z0-9\\\\-\\\\.]+\\\\.[a-zA-Z]{2,}(\\\\/[^>,\\\\\\\")\\\\s]*)?)\"\n  url: \"http://localhost:8000/micropub.php\"\n  channels:\n  - \"@seblog\"\n- match: \"^(tweet|note|fb) (.*)\"\n  url: \"http://localhost:8000/micropub.php\"\n  channels:\n  - \"@seblog\"\nAs you can see, I like to match for a URL to support like, bookmark and rsvp, and for anything to support notes on your own site, Twitter and Facebook. Feel free to change the syntax to your own needs.\nUnder channels, I defined @seblog, which means ‘every channel in the server seblog’. That name comes from your config.yml, and it’s a safety measure, so that when I connect my bot to Freenode also, it won’t accept likes from other people. I am the only person connected to the private IRC network Seblog, so that will be fine.\nCreating the Micropub.php\nAs you saw, the hooks define a URL that will be called by the bot. I specified that to be on localhost:8000 and point to micropub.php. In your TikTokBot folder (or where you want, really) create a folder called ‘server’ and a file within it called ‘micropub.php’. Let’s start with the following to test it out:\n<?php\necho json_encode([\n  'content' => 'Hi, you called for a Micropub?'\n]);\nThen go to the newly created folder and run the command php -S localhost:8000. This starts up a webserver from that folder, so if you now go to your private channel and say note This is a test, you will see that the bot responds. If you say something that does not match the regex, the bot will stay silent.\nGive me my data back\nIf we want to send data to our Micropub endpoint, we need to make sure that our bot has that data. Let’s make the bot echo whatever we said, so we know that he heard us.\nTikTokBot gives us a JSON object of the message via the POST data. Long story short, you can get it by using the following:\n$message = json_decode(file_get_contents(\"php://input\"));\n\n$full   = $message->content;\n$action = $message->match[0];\n$param  = $message->match[1];\n\necho json_encode([\n  'content' => \"Hi, you said '$full', you wanted to $action $param?\"\n]);\nNow, if you say like https://seblog.nl/2017/08/19/6/micropub-irc-bot, the bot will respond with Hi, you said 'like https://seblog.nl/2017/08/19/6/micropub-irc-bot', you wanted to like https://seblog.nl/2017/08/19/6/micropub-irc-bot?. Try it out, and different actions too, so you know it works!\nMake sure not to echo the full message, because since the bot listens to itself, that message will trigger itself again, resulting in the bot repeating the message over and over again. (Just restart the bot if that happens.)\nSending a POST request\nA Micropub request is, in the end, just a POST request. Here’s a little helper function to send one for you. Just start with this code at the top of your file, right after <?php.\nfunction send_post($url, $fields, $bearer = null) {\n  $ch = curl_init();\n  curl_setopt($ch, CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');\n  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n  if ($bearer) {\n    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Authorization: Bearer '.$bearer]);\n  }\n\n  $body = http_build_query($fields);\n  curl_setopt($ch, CURLOPT_POST, 1);\n  curl_setopt($ch, CURLOPT_POSTFIELDS, $body);\n\n  $resp = curl_exec($ch);\n\n  if(!$resp) {\n    $resp = 'Error: '.curl_error($ch);\n  }\n\n  curl_close($ch);\n\n  return $resp;\n}\nNext, I have a plain and dirty if-chain, to determine the action. You can add this right after you defined $action and $param:\nif ($action == 'like') {\n  $fields = [\n    'like-of' => $param\n  ];\n\n} elseif ($action == 'bookmark') {\n  $fields = [\n    'bookmark-of' => $param\n  ];\n} else exit();\n\nsend_post('https://seblog.nl/micropub', $fields, 'xxx');\nMake sure to replace that URL with your own Micropub endpoint, and xxx with your own access token. I’ll talk about obtaining one at the bottom of this post.\nI don’t have the bot say anything after this, because the bot will give a notification once a Micropub request is made, which is enough feedback for me. You could also return whatever send_post() returns, I leave that up to you.\nMore post types\nAs you can see in the code above, you can just add fields to the array. Here are some other elseifs I use.\n} elseif ($action == 'tweet') {\n  if (strlen($param) > 140) {\n    exit(json_encode(['content' => 'Text is '.strlen($param).' chars!']);\n  }\n\n  $fields = [\n    'content' => $param,\n    'syndicate-to' => 'https://brid.gy/publish/twitter'\n  ];\n\n} elseif ($action == 'fb') {\n  $fields = [\n    'content' => $param,\n    'syndicate-to' => 'https://brid.gy/publish/facebook'\n  ];\n\n} elseif ($action == 'rsvp'\n   or $action == 'yes'\n   or $action == 'no'\n   or $action == 'maybe'\n   or $action == 'interested') {\n\n  $fields = [\n    'in-reply-to' => $param,\n    'rsvp' => $action == 'rsvp' ? 'yes' : $action,\n  ];\n\n  if (strpos($param, 'facebook.com')) {\n    $fields['syndicate-to'] = 'https://brid.gy/publish/facebook';\n  }\n\n} elseif ($action == 'note') {\n\n  $fields = [\n    'content' => $param\n  ];\nSee how easy that is? Please make up new ones and tell me about it!\n\nI’m particularly proud of the tweet one, which will, thanks to the exit(), not post the tweet unless it fits the 140-chars-rule.\nPlease note that the use of the syndicate-to fields (or the newer mp-syndicate-to) depend on your own website. This only gives my webserver the order to syndicate, it does not syndicate by itself. If your server does not know how to syndicate to Twitter, it will not work, but explaining how to do that is it’s own tutorial.\nIn real life, I actually have note set to 'private' => true and 'audience' => 'http://seblog.nl/, so it’s a private note. But: 1) I don’t expect many people to support private posts, 2) how many people are interested in posting things to their website only they themselves can see? and 3) I want to change the 'private' => true to 'visibility' => 'private', or something like that.\nThat’s it!\nThere you go, a customisable Micropub chatbot. Please double check that it’s only doing it’s thing on your private IRC server, and not on any public servers where your bot might lurk (if you use any). Have fun liking and posting!\n\nPOST-scriptum: Obtaining an access token\nThe question “what do I replace ‘xxx’ with?” is a hard one to answer, because it totally depends on how your site handles access tokens. Most Micropub clients ship with an IndieAuth flow to obtaining one, but since we’re making this one ourselves, we have to get one manually.\nYou can do this by following the steps on the wiki, if you have a way to send POST requests. You can also log in to a Micropub client like Quill, which shows you the access token it got, and use that. Since this all depends on your own site, it might offer an easier way, or it might not."
    ],
    "author": [
      "https://seblog.nl"
    ]
  }
}